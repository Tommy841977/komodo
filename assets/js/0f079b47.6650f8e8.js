"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[72],{4476:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>a,frontMatter:()=>d,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"ecosystem/development","title":"Development","description":"If you are looking to contribute to Komodo, this page is a launching point for setting up your Komodo development environment.","source":"@site/docs/ecosystem/development.md","sourceDirName":"ecosystem","slug":"/ecosystem/development","permalink":"/docs/ecosystem/development","draft":false,"unlisted":false,"editUrl":"https://github.com/moghtech/komodo/tree/main/docsite/docs/ecosystem/development.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Community","permalink":"/docs/ecosystem/community"}}');var r=s(4848),i=s(8453);const d={},t="Development",c={},l=[{value:"Dependencies",id:"dependencies",level:2},{value:"runnables-cli",id:"runnables-cli",level:3},{value:"Docker",id:"docker",level:2},{value:"Devcontainer",id:"devcontainer",level:2},{value:"Local",id:"local",level:2},{value:"Docsite Development",id:"docsite-development",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"development",children:"Development"})}),"\n",(0,r.jsx)(n.p,{children:"If you are looking to contribute to Komodo, this page is a launching point for setting up your Komodo development environment."}),"\n",(0,r.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,r.jsxs)(n.p,{children:["Running Komodo from ",(0,r.jsx)(n.a,{href:"https://github.com/moghtech/komodo",children:"source"})," requires either ",(0,r.jsx)(n.a,{href:"https://www.docker.com/",children:"Docker"})," (and can use the included ",(0,r.jsx)(n.a,{href:"https://code.visualstudio.com/docs/devcontainers/containers",children:"devcontainer"}),"), or can have the development dependencies installed locally:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Backend (Core / Periphery APIs)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.rust-lang.org/",children:"Rust"})," stable via ",(0,r.jsx)(n.a,{href:"https://rustup.rs/",children:"rustup installer"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.mongodb.com/",children:"MongoDB"})," or ",(0,r.jsx)(n.a,{href:"https://www.ferretdb.com/",children:"FerretDB"})," available locally."]}),"\n",(0,r.jsxs)(n.li,{children:["On Debian/Ubuntu: ",(0,r.jsx)(n.code,{children:"apt install build-essential pkg-config libssl-dev"})," required to build the rust source."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Frontend (Web UI)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://nodejs.org/en",children:"Node"})," >= 18.18 + NPM","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://yarnpkg.com/",children:"Yarn"})," - (Tip: use ",(0,r.jsx)(n.code,{children:"corepack enable"})," after installing ",(0,r.jsx)(n.code,{children:"node"})," to use ",(0,r.jsx)(n.code,{children:"yarn"}),")"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/1password/typeshare",children:"typeshare"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://deno.com/",children:"Deno"})," >= 2.0.2"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"runnables-cli",children:"runnables-cli"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/mbecker20/runnables-cli",children:"mbecker20/runnables-cli"})," can be used as a convience CLI for running common project tasks found in ",(0,r.jsx)(n.code,{children:"runfile.toml"}),". Otherwise, you can create your own project tasks by references the ",(0,r.jsx)(n.code,{children:"cmd"}),"s found in ",(0,r.jsx)(n.code,{children:"runfile.toml"}),". All instructions below will use runnables-cli v1.3.7+."]}),"\n",(0,r.jsx)(n.h2,{id:"docker",children:"Docker"}),"\n",(0,r.jsxs)(n.p,{children:["After making changes to the project, run ",(0,r.jsx)(n.code,{children:"run dev-compose-build"})," to rebuild Komodo and then ",(0,r.jsx)(n.code,{children:"run dev-compose-exposed"})," to start a Komodo container with the UI accessible at ",(0,r.jsx)(n.code,{children:"localhost:9120"}),". Any changes made to source files will require re-running the ",(0,r.jsx)(n.code,{children:"dev-compose-build"})," and ",(0,r.jsx)(n.code,{children:"dev-compose-exposed"})," commands."]}),"\n",(0,r.jsx)(n.h2,{id:"devcontainer",children:"Devcontainer"}),"\n",(0,r.jsxs)(n.p,{children:["Use the included ",(0,r.jsx)(n.code,{children:".devcontainer.json"})," with VSCode or other compatible IDE to stand-up a full environment, including database, with one click."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://code.visualstudio.com/Docs/editor/tasks",children:"VSCode Tasks"})," are provided for building and running Komodo."]}),"\n",(0,r.jsxs)(n.p,{children:["After opening the repository with the devcontainer run the task ",(0,r.jsx)(n.code,{children:"Init"})," to build the frontend/backend. Then, the task ",(0,r.jsx)(n.code,{children:"Run Komodo"})," can be used to run frontend/backend. Other tasks for rebuilding/running just one component of the stack (Core API, Periphery API, Frontend) are also provided."]}),"\n",(0,r.jsx)(n.h2,{id:"local",children:"Local"}),"\n",(0,r.jsx)(n.p,{children:"To run a full Komodo instance from a non-container environment run commands in this order:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensure dependencies are up to date","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rustup update"})," -- ensure rust toolchain is up to date"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Build and Run backend","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"run dev-core"})," -- Build and run Core API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"run dev-periphery"})," -- Build and run Periphery API"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Build Frontend","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Install ",(0,r.jsx)(n.strong,{children:"typeshare-cli"}),": ",(0,r.jsx)(n.code,{children:"cargo install typeshare-cli"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Run this once"})," -- ",(0,r.jsx)(n.code,{children:"run link-client"})," -- generates TS client and links to the frontend"]}),"\n",(0,r.jsxs)(n.li,{children:["After running the above once:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"run gen-client"})," -- Rebuild client"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"run dev-frontend"})," -- Start in dev (watch) mode"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"run build-frontend"})," -- Typecheck and build"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"docsite-development",children:"Docsite Development"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"run dev-docsite"})," to start the ",(0,r.jsx)(n.a,{href:"https://docusaurus.io/",children:"Docusaurus"})," Komodo docs site in development mode. Changes made to files in ",(0,r.jsx)(n.code,{children:"./docsite"})," will be automatically reloaded by the server."]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>t});var o=s(6540);const r={},i=o.createContext(r);function d(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);
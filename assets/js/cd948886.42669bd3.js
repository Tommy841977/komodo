"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[979],{8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>l});var r=n(6540);const i={},o=r.createContext(i);function c(e){const s=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(o.Provider,{value:s},e.children)}},9992:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"resources/index","title":"Resources","description":"Komodo is extendible through the Resource abstraction. Entities like Server, Deployment, and Stack are all Komodo Resources.","source":"@site/docs/resources/index.md","sourceDirName":"resources","slug":"/resources/","permalink":"/docs/resources/","draft":false,"unlisted":false,"editUrl":"https://github.com/moghtech/komodo/tree/main/docsite/docs/resources/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Version Upgrades","permalink":"/docs/setup/version-upgrades"},"next":{"title":"Building Images","permalink":"/docs/build-images"}}');var i=n(4848),o=n(8453);const c={},l="Resources",t={},d=[{value:"Server",id:"server",level:2},{value:"Deployment",id:"deployment",level:2},{value:"Stack",id:"stack",level:2},{value:"Repo",id:"repo",level:2},{value:"Build",id:"build",level:2},{value:"Builder",id:"builder",level:2},{value:"Procedure",id:"procedure",level:2},{value:"Action",id:"action",level:2},{value:"Resource Sync",id:"resource-sync",level:2},{value:"Alerter",id:"alerter",level:2}];function a(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"resources",children:"Resources"})}),"\n",(0,i.jsxs)(s.p,{children:["Komodo is extendible through the ",(0,i.jsx)(s.strong,{children:"Resource"})," abstraction. Entities like ",(0,i.jsx)(s.code,{children:"Server"}),", ",(0,i.jsx)(s.code,{children:"Deployment"}),", and ",(0,i.jsx)(s.code,{children:"Stack"})," are all ",(0,i.jsx)(s.strong,{children:"Komodo Resources"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["All resources have common traits, such as a unique ",(0,i.jsx)(s.code,{children:"name"})," and ",(0,i.jsx)(s.code,{children:"id"})," amongst all other resources of the same resource type.\nAll resources can be assigned ",(0,i.jsx)(s.code,{children:"tags"}),", which can be used to group related resources."]}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsx)(s.p,{children:"Many resources need access to git repos / docker registries. There is an in-built token management system (managed in UI or in config file) to give resources access to credentials.\nAll resources which depend on git repos / docker registries are able to use these credentials to access private repos."})}),"\n",(0,i.jsx)(s.h2,{id:"server",children:(0,i.jsx)(s.a,{href:"setup/connect-servers",children:"Server"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Configure the connection to periphery agents."}),"\n",(0,i.jsx)(s.li,{children:"Set alerting thresholds."}),"\n",(0,i.jsxs)(s.li,{children:["Can be attached to by ",(0,i.jsx)(s.strong,{children:"Deployments"}),", ",(0,i.jsx)(s.strong,{children:"Stacks"}),", ",(0,i.jsx)(s.strong,{children:"Repos"}),", and ",(0,i.jsx)(s.strong,{children:"Builders"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"deployment",children:(0,i.jsx)(s.a,{href:"/docs/resources/deploy-containers/",children:"Deployment"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Deploy a docker container on the attached Server."}),"\n",(0,i.jsxs)(s.li,{children:["Manage services at the container level, perform orchestration using ",(0,i.jsx)(s.strong,{children:"Procedures"})," and ",(0,i.jsx)(s.strong,{children:"ResourceSyncs"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"stack",children:(0,i.jsx)(s.a,{href:"resources/docker-compose",children:"Stack"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Deploy with docker compose."}),"\n",(0,i.jsx)(s.li,{children:"Provide the compose file in UI, or move the files to a git repo and use a webhook for auto redeploy on push."}),"\n",(0,i.jsxs)(s.li,{children:["Supports composing multiple compose files using ",(0,i.jsx)(s.code,{children:"docker compose -f ... -f ..."}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Pass environment variables usable within the compose file. Interpolate in app-wide variables / secrets."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"repo",children:"Repo"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Put scripts in git repos, and run them on a Server, or using a Builder."}),"\n",(0,i.jsx)(s.li,{children:"Can build binaries, perform automation, really whatever you can think of."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"build",children:(0,i.jsx)(s.a,{href:"/docs/build-images",children:"Build"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Build application source into docker images, and push them to the configured registry."}),"\n",(0,i.jsx)(s.li,{children:"The source can be any git repo containing a Dockerfile."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"builder",children:(0,i.jsx)(s.a,{href:"resources/build-images/builders",children:"Builder"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Either points to a connected server, or holds configuration to launch a single-use AWS instance to build the image."}),"\n",(0,i.jsxs)(s.li,{children:["Can be attached to ",(0,i.jsx)(s.strong,{children:"Builds"})," and ",(0,i.jsx)(s.strong,{children:"Repos"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"procedure",children:(0,i.jsx)(s.a,{href:"resources/procedures#procedures",children:"Procedure"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Compose many actions on other resource type, like ",(0,i.jsx)(s.code,{children:"RunBuild"})," or ",(0,i.jsx)(s.code,{children:"DeployStack"}),", and run it on button push (or with a webhook)."]}),"\n",(0,i.jsx)(s.li,{children:'Can run one or more actions in parallel "stages", and compose a series of parallel stages to run sequentially.'}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"action",children:(0,i.jsx)(s.a,{href:"resources/procedures#actions",children:"Action"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Write scripts calling the Komodo API in Typescript"}),"\n",(0,i.jsx)(s.li,{children:"Use a pre-initialized Komodo client within the script, no api keys necessary."}),"\n",(0,i.jsx)(s.li,{children:"Type aware in UI editor. Get suggestions and see in depth docs as you type."}),"\n",(0,i.jsxs)(s.li,{children:["The Typescript client is also ",(0,i.jsx)(s.a,{href:"https://www.npmjs.com/package/komodo_client",children:"published on NPM"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"resource-sync",children:(0,i.jsx)(s.a,{href:"resources/sync-resources",children:"Resource Sync"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Orchestrate all your configuration declaratively by defining it in ",(0,i.jsx)(s.code,{children:"toml"})," files, which are checked into a git repo."]}),"\n",(0,i.jsxs)(s.li,{children:["Can deploy ",(0,i.jsx)(s.strong,{children:"Deployments"})," and ",(0,i.jsx)(s.strong,{children:"Stacks"})," if changes are suggested."]}),"\n",(0,i.jsxs)(s.li,{children:["Specify deploy ordering with ",(0,i.jsx)(s.code,{children:"after"})," array. (like docker compose ",(0,i.jsx)(s.code,{children:"depends_on"})," but can span across servers.)."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"alerter",children:"Alerter"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Route alerts to various endpoints."}),"\n",(0,i.jsx)(s.li,{children:"Can configure rules on each Alerter, such as resource whitelist, blacklist, or alert type filter."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);
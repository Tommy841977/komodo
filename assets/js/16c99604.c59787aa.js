"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[51],{5453:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"setup/connect-servers","title":"Connect More Servers","description":"Connecting a server to Komodo has 2 steps:","source":"@site/docs/setup/connect-servers.mdx","sourceDirName":"setup","slug":"/setup/connect-servers","permalink":"/docs/setup/connect-servers","draft":false,"unlisted":false,"editUrl":"https://github.com/moghtech/komodo/tree/main/docsite/docs/setup/connect-servers.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"FerretDB","permalink":"/docs/setup/ferretdb"},"next":{"title":"Backup and Restore","permalink":"/docs/setup/backup"}}');var o=i(4848),r=i(8453),s=i(6695);const c={},l="Connect More Servers",a={},h=[{value:"Install Periphery",id:"install-periphery",level:2},{value:"Install the Periphery agent - systemd",id:"install-the-periphery-agent---systemd",level:3},{value:"Install the Periphery agent - container",id:"install-the-periphery-agent---container",level:3},{value:"Manual install steps - binaries",id:"manual-install-steps---binaries",level:3},{value:"Example periphery start command",id:"example-periphery-start-command",level:3},{value:"Passing config files",id:"passing-config-files",level:3},{value:"Configuration",id:"configuration",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"connect-more-servers",children:"Connect More Servers"})}),"\n","\n",(0,o.jsx)(n.p,{children:"Connecting a server to Komodo has 2 steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Install the Periphery agent on the server (either binary or container)."}),"\n",(0,o.jsx)(n.li,{children:"Add the server to Komodo via the Core API / UI."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"install-periphery",children:"Install Periphery"}),"\n",(0,o.jsxs)(n.p,{children:["You can install Periphery as a systemd managed process, run it as a ",(0,o.jsx)(n.a,{href:"https://github.com/moghtech/komodo/pkgs/container/komodo-periphery",children:"docker container"}),", or do whatever you want with the binary."]}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["Allowing unintended access to the Periphery agent API is a security risk.\nEnsure to take appropriate measures to block access to the Periphery API, such as firewall rules on port ",(0,o.jsx)(n.code,{children:"8120"}),".\nAdditionally, you can whitelist your Komodo Core IP address in the ",(0,o.jsx)(n.a,{href:"https://github.com/moghtech/komodo/blob/main/config/periphery.config.toml#L46",children:"Periphery config"}),",\nand configure it to ",(0,o.jsx)(n.a,{href:"https://github.com/moghtech/komodo/blob/main/config/periphery.config.toml#L51",children:"only accept requests including your Core passkey"}),"."]})}),"\n",(0,o.jsx)(n.h3,{id:"install-the-periphery-agent---systemd",children:"Install the Periphery agent - systemd"}),"\n",(0,o.jsx)(n.p,{children:"As root user:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"curl -sSL https://raw.githubusercontent.com/moghtech/komodo/main/scripts/setup-periphery.py | python3\n"})}),"\n",(0,o.jsx)(n.p,{children:"Periphery can also be installed to run as the calling user, just note this comes with some additional configuration."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"curl -sSL https://raw.githubusercontent.com/moghtech/komodo/main/scripts/setup-periphery.py | python3 - --user\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can find more information (and view the script) in the ",(0,o.jsx)(n.a,{href:"https://github.com/moghtech/komodo/tree/main/scripts",children:"readme"}),"."]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"This script can be run multiple times without issue, and it won't change existing config after the first run. Just run it again after a Komodo version release, and it will update the periphery version."})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["For deployment to many servers, a tool like ",(0,o.jsx)(n.a,{href:"https://docs.ansible.com/",children:"Ansible"})," should be used.\nAn example of such a setup can be found here: ",(0,o.jsx)(n.a,{href:"https://github.com/bpbradley/ansible-role-komodo",children:"https://github.com/bpbradley/ansible-role-komodo"})]})}),"\n",(0,o.jsx)(n.h3,{id:"install-the-periphery-agent---container",children:"Install the Periphery agent - container"}),"\n",(0,o.jsx)(n.p,{children:"You can use a docker compose file:"}),"\n",(0,o.jsx)(s.A,{title:"https://github.com/moghtech/komodo/blob/main/compose/periphery.compose.yaml",url:"https://raw.githubusercontent.com/moghtech/komodo/main/compose/periphery.compose.yaml",language:"yaml"}),"\n",(0,o.jsx)(n.h3,{id:"manual-install-steps---binaries",children:"Manual install steps - binaries"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Download the periphery binary from the latest ",(0,o.jsx)(n.a,{href:"https://github.com/moghtech/komodo/releases",children:"release"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Create and edit your config files, following the ",(0,o.jsx)(n.a,{href:"https://github.com/moghtech/komodo/blob/main/config/periphery.config.toml",children:"config example"}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"https://docs.rs/komodo_client/latest/komodo_client/entities/config/periphery/index.html",children:"periphery config docs"}),"\nfor more information on configuring periphery."]})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Ensure that inbound connectivity is allowed on the port specified in periphery.config.toml (default 8120)."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Install docker. See the ",(0,o.jsx)(n.a,{href:"https://docs.docker.com/engine/install/",children:"docker install docs"}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"Ensure that the user which periphery is run as has access to the docker group without sudo."})}),"\n",(0,o.jsxs)(n.ol,{start:"5",children:["\n",(0,o.jsx)(n.li,{children:"Start the periphery binary with your preferred process manager, like systemd."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-periphery-start-command",children:"Example periphery start command"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"periphery \\\n\t--config-path /path/to/periphery.config.base.toml \\\n\t--config-path /other_path/to/override-periphery-config-directory \\\n\t--config-keyword periphery \\\n\t--config-keyword config \\\n\t--merge-nested-config true\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["You can run ",(0,o.jsx)(n.code,{children:"periphery --help"})," to see the manual."]})}),"\n",(0,o.jsxs)(n.p,{children:["When running periphery in docker, use ",(0,o.jsx)(n.a,{href:"https://docs.docker.com/reference/compose-file/services/#command",children:"command"})," to pass in additional arguments."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"command: periphery --config-path /path/in/container/to/periphery.config.base.toml\n"})}),"\n",(0,o.jsx)(n.h3,{id:"passing-config-files",children:"Passing config files"}),"\n",(0,o.jsxs)(n.p,{children:["Either file paths or directory paths can be passed to ",(0,o.jsx)(n.code,{children:"--config-path"})," (alias: ",(0,o.jsx)(n.code,{children:"-c"}),"). By default, no paths will be used, meaning the configuration is entirely\nloaded via environment variables."]}),"\n",(0,o.jsxs)(n.p,{children:["When using directories, the file entries can be filtered by name with the ",(0,o.jsx)(n.code,{children:"--config-keyword"})," argument, which can be passed multiple times to add more keywords.\nThese are each wildcard patterns to match file names.\nOnly config files with file names that contain a keyword will be merged, with files matching later defined keywords having higher priority on field conflicts.\nBy default, the only keyword is ",(0,o.jsx)(n.code,{children:"*config*.*"}),". This matches files like ",(0,o.jsx)(n.code,{children:"config.toml"}),", ",(0,o.jsx)(n.code,{children:"periphery.config.yaml"}),", etc."]}),"\n",(0,o.jsxs)(n.p,{children:["When passing multiple config files, later --config-path given in the command will always override previous ones.\nDirectory config files are merged in alphabetical order by name, so ",(0,o.jsx)(n.code,{children:"config_b.toml"})," will override ",(0,o.jsx)(n.code,{children:"config_a.toml"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["There are two ways to merge config files.\nThe default behavior is to completely replace any base fields with whatever fields are present in the override config.\nSo if you pass ",(0,o.jsx)(n.code,{children:"allowed_ips = []"})," in your override config, the final allowed_ips will be an empty list as well."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"--merge-nested-config true"})," will merge config fields recursively and extend config array fields."]}),"\n",(0,o.jsxs)(n.p,{children:["For example, with ",(0,o.jsx)(n.code,{children:"--merge-nested-config true"})," you can specify an allowed ip in the base config, and another in the override config, they will both be present in the final config."]}),"\n",(0,o.jsx)(n.p,{children:"Similarly, you can specify a base docker / github account pair, and extend them with additional accounts in the override config."}),"\n",(0,o.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["The configuration can also be passed as ",(0,o.jsx)(n.strong,{children:"YAML"})," or ",(0,o.jsx)(n.strong,{children:"JSON"}),".\nYou can use the it-tools to convert this TOML file to your preferred format:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["YAML: ",(0,o.jsx)(n.a,{href:"https://it-tools.tech/toml-to-yaml",children:"https://it-tools.tech/toml-to-yaml"})]}),"\n",(0,o.jsxs)(n.li,{children:["JSON: ",(0,o.jsx)(n.a,{href:"https://it-tools.tech/toml-to-json",children:"https://it-tools.tech/toml-to-json"})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Quick download to ",(0,o.jsx)(n.code,{children:"./komodo/periphery.config.toml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"wget -P komodo https://raw.githubusercontent.com/moghtech/komodo/main/config/periphery.config.toml\n"})}),"\n",(0,o.jsx)(s.A,{title:"https://github.com/moghtech/komodo/blob/main/config/periphery.config.toml",url:"https://raw.githubusercontent.com/moghtech/komodo/main/config/periphery.config.toml",language:"toml"})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},6695:(e,n,i)=>{i.d(n,{A:()=>s});var t=i(6540),o=i(1028),r=i(4848);function s({url:e,language:n,title:i}){const[s,c]=(0,t.useState)("");return(0,t.useEffect)(()=>{!async function(e,n){const i=await fetch(e);n(await i.text())}(e,c)},[]),(0,r.jsx)(o.A,{title:i??e,language:n,showLineNumbers:!0,children:s})}}}]);
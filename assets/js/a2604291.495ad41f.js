"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[748],{3759:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"ecosystem/cli","title":"Komodo CLI","description":"The Komodo CLI, km, can be used to:","source":"@site/docs/ecosystem/cli.mdx","sourceDirName":"ecosystem","slug":"/ecosystem/cli","permalink":"/docs/ecosystem/cli","draft":false,"unlisted":false,"editUrl":"https://github.com/moghtech/komodo/tree/main/docsite/docs/ecosystem/cli.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Ecosystem","permalink":"/docs/ecosystem"},"next":{"title":"API and Clients","permalink":"/docs/ecosystem/api"}}');var s=o(4848),l=o(8453),r=o(6695);const t={},c="Komodo CLI",d={},a=[{value:"Examples",id:"examples",level:3},{value:"Install",id:"install",level:3},{value:"Linux",id:"linux",level:4},{value:"MacOS (Homebrew)",id:"macos-homebrew",level:4},{value:"Container",id:"container",level:4},{value:"Configure",id:"configure",level:3},{value:"File detection",id:"file-detection",level:4},{value:"Profiles",id:"profiles",level:4},{value:"Example File",id:"example-file",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"komodo-cli",children:"Komodo CLI"})}),"\n",(0,s.jsxs)(n.p,{children:["The Komodo CLI, ",(0,s.jsx)(n.code,{children:"km"}),", can be used to:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Quickly ",(0,s.jsx)(n.strong,{children:"run executions"})," and update ",(0,s.jsx)(n.strong,{children:"resources"})," and ",(0,s.jsx)(n.strong,{children:"variables"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reset user passwords"})," and elevate users to ",(0,s.jsx)(n.strong,{children:"Super Admin"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Perform Database ",(0,s.jsx)(n.strong,{children:"backup"}),", ",(0,s.jsx)(n.strong,{children:"restore"}),", and ",(0,s.jsx)(n.strong,{children:"copy"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The Komodo Core image comes packaged with the Komodo CLI,\nand is available for usage inside running container with ",(0,s.jsx)(n.code,{children:"docker exec -it komodo-core km ..."}),".\nThis way, it inherits the Core database config in order to easily perform backups with ",(0,s.jsx)(n.code,{children:"km db backup -y"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"km --help"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"km deploy stack my-stack"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"km run action my-action -y"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"km database backup"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"km db restore"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"km set var MY_VAR my_value -y"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'km update build my-build "version=1.19.0&branch=release"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"km x commit my-sync"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"km set user mbecks super-admin true"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'km set user mbecks password "temp-password"'})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"install",children:"Install"}),"\n",(0,s.jsxs)(n.p,{children:["There are binaries available for ",(0,s.jsx)(n.strong,{children:"Linux"})," (x86_64 / aarch64), ",(0,s.jsx)(n.strong,{children:"MacOS"})," (apple silicon), as\nwell as a distroless image: ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ghcr.io/moghtech/komodo-cli"})}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"linux",children:"Linux"}),"\n",(0,s.jsx)(n.p,{children:"You can install the binary using the following command:"}),"\n",(0,s.jsxs)(n.p,{children:["System-wide, as root, to ",(0,s.jsx)(n.code,{children:"/usr/local/bin/km"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -sSL https://raw.githubusercontent.com/moghtech/komodo/main/scripts/install-cli.py | python3\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Or as non-root, to ",(0,s.jsx)(n.code,{children:"${HOME}/.local/bin/km"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -sSL https://raw.githubusercontent.com/moghtech/komodo/main/scripts/install-cli.py | python3 - --user\n"})}),"\n",(0,s.jsx)(n.h4,{id:"macos-homebrew",children:"MacOS (Homebrew)"}),"\n",(0,s.jsxs)(n.p,{children:["Add the ",(0,s.jsx)(n.code,{children:"moghtech/komodo"})," tap, then install ",(0,s.jsx)(n.code,{children:"km"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"brew tap moghtech/komodo && \\\n  brew install km\n"})}),"\n",(0,s.jsx)(n.h4,{id:"container",children:"Container"}),"\n",(0,s.jsx)(n.p,{children:"You can alias a docker run command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"alias km='docker run --rm -v $HOME/.config/komodo:/config ghcr.io/moghtech/komodo-cli km'\nkm config\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configure",children:"Configure"}),"\n",(0,s.jsxs)(n.p,{children:["The CLI uses a configuration file to pass the Komodo host / api keys, database address and credentials,\nand configure some other behaviors. Additionally, all configuration fields can be individually overridden\nusing ",(0,s.jsx)(n.strong,{children:"CLI arguments"})," or ",(0,s.jsx)(n.strong,{children:"environment variables"}),", with CLI arguments having top priority."]}),"\n",(0,s.jsxs)(n.p,{children:["Whenever you want to check how config will be loaded, you can use the ",(0,s.jsx)(n.code,{children:"km config"})," command\nto print it out."]}),"\n",(0,s.jsx)(n.h4,{id:"file-detection",children:"File detection"}),"\n",(0,s.jsxs)(n.p,{children:["When run, CLI will scan the ",(0,s.jsx)(n.strong,{children:"current working directory"})," in addition to ",(0,s.jsx)(n.code,{children:"${HOME}/.config/komodo"})," for any files matching the wildcard pattern ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"*komodo.cli*.*"})}),",\nparse them into a general representation, and then merge them together. Files which are detected later are merged later,\nmeaning they will override on conflicting fields. By default, files in ",(0,s.jsx)(n.code,{children:"${HOME}/.config/komodo"})," come first\nin the merge ordering, meaning they are ",(0,s.jsx)(n.strong,{children:"lower priority"})," than those detected in the current working directory.\nYou can also override these default paths by passing ",(0,s.jsx)(n.code,{children:"km -c /path/to/1/base.config.yaml -c ./overrides ..."}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If you want ",(0,s.jsx)(n.code,{children:"km"})," to find configuration files in another directory,\nyou can use make ",(0,s.jsx)(n.code,{children:".kminclude"})," file inside one of the configured directories."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"# Supports comments\n\n./.komodo    # relative to directory containing `kmignore`\n\n/etc/komodo/komodo.cli.toml\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that wildcards in these paths are ",(0,s.jsx)(n.strong,{children:"not supported"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"profiles",children:"Profiles"}),"\n",(0,s.jsxs)(n.p,{children:["In the files, you can configure multiple profiles, each with a name / aliases. Then you\nchoose which config profile to use with ",(0,s.jsx)(n.code,{children:"km -p <profile> ..."}),". This allows you to easily switch between\nmultiple Cores you want to connect to, or different database backup / restore options."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to avoid passing ",(0,s.jsx)(n.code,{children:"-p <profile>"})," every time, you can set a\n",(0,s.jsx)(n.code,{children:"default_profile"}),' at the top level of the configuration file. Additionally,\nany fields you would like to be the "default" across all profiles can be\nset at the top level of the file.']}),"\n",(0,s.jsx)(n.h4,{id:"example-file",children:"Example File"}),"\n",(0,s.jsxs)(n.p,{children:["The configuration can also be passed as ",(0,s.jsx)(n.strong,{children:"YAML"})," or ",(0,s.jsx)(n.strong,{children:"JSON"}),".\nYou can use the it-tools to convert this TOML file to your preferred format:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["YAML: ",(0,s.jsx)(n.a,{href:"https://it-tools.tech/toml-to-yaml",children:"https://it-tools.tech/toml-to-yaml"})]}),"\n",(0,s.jsxs)(n.li,{children:["JSON: ",(0,s.jsx)(n.a,{href:"https://it-tools.tech/toml-to-json",children:"https://it-tools.tech/toml-to-json"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Quick download to ",(0,s.jsx)(n.code,{children:"./komodo/komodo.cli.toml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"wget -P komodo https://raw.githubusercontent.com/moghtech/komodo/main/config/komodo.cli.toml\n"})}),"\n","\n",(0,s.jsx)(r.A,{title:"https://github.com/moghtech/komodo/blob/main/config/komodo.cli.toml",url:"https://raw.githubusercontent.com/moghtech/komodo/main/config/komodo.cli.toml",language:"toml"})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},6695:(e,n,o)=>{o.d(n,{A:()=>r});var i=o(6540),s=o(1028),l=o(4848);function r({url:e,language:n,title:o}){const[r,t]=(0,i.useState)("");return(0,i.useEffect)(()=>{!async function(e,n){const o=await fetch(e);n(await o.text())}(e,t)},[]),(0,l.jsx)(s.A,{title:o??e,language:n,showLineNumbers:!0,children:r})}}}]);